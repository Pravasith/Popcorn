set(CMAKE_SYSTEM_NAME Windows)

set(CMAKE_C_COMPILER x86_64-w64-mingw32-gcc)
set(CMAKE_CXX_COMPILER x86_64-w64-mingw32-g++)

# WINDOWS ENV BINARIES LOCATION
set(WINDOWS_BINARIES_DIR ${CMAKE_SOURCE_DIR}/third-party/windows)
set(PLATFORM_AGNOSTIC_VENDOR_BINARIES_DIR
    ${CMAKE_SOURCE_DIR}/third-party/platform-agnostic)

# SET CMAKE_FIND ROOT PATHS TO FIND BINARIES OR COMPILERS
set(CMAKE_FIND_ROOT_PATH
    # COMPILER
    /usr/x86_64-w64-mingw32
    # VENDOR LIBS
    ${WINDOWS_BINARIES_DIR}/glfw
    ${PLATFORM_AGNOSTIC_VENDOR_BINARIES_DIR}/vulkan-loader
    ${PLATFORM_AGNOSTIC_VENDOR_BINARIES_DIR}/vulkan-headers
    ${PLATFORM_AGNOSTIC_VENDOR_BINARIES_DIR}/glm)

# SPECIFY THE VARIABLE TO STORE THE HEADER FILE PATH
set(GLFW_INCLUDE_DIR ${WINDOWS_BINARIES_DIR}/glfw/include)

include_directories(
  ${GLFW_INCLUDE_DIR}
  # ${IMGUI_INCLUDE_DIR}
)

# USE FIND_PATH TO LOCATE THE HEADER FILE PATH
find_path(GLFW_INCLUDE_DIR glfw3.h PATHS ${WINDOWS_BINARIES_DIR}/glfw/include)

# CHECK IF THE HEADER FILE PATH IS FOUND
if(# GLAD_INCLUDE_DIR AND
   GLFW_INCLUDE_DIR
   # AND IMGUI_INCLUDE_DIR
)
  message(STATUS "Found GLFW header files: ${GLFW_INCLUDE_DIR}")
else()
  message(FATAL_ERROR "Could not find GLFW header files")
endif()

# adjust the default behavior of the FIND_XXX() commands: search programs in the
# host environment
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)

# search headers and libraries in the target environment
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
